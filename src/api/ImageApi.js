/**
 * Mediamask API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import NewImage from '../model/NewImage';
import ValidationError from '../model/ValidationError';

/**
* Image service.
* @module api/ImageApi
* @version 1.0.0
*/
export default class ImageApi {

    /**
    * Constructs a new ImageApi. 
    * @alias module:api/ImageApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the renderImage operation.
     * @callback module:api/ImageApi~renderImageCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Render a new image
     * @param {module:model/NewImage} newImage Provide the template and placeholders values that should be rendered in the image
     * @param {module:api/ImageApi~renderImageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    renderImage(newImage, callback) {
      let postBody = newImage;
      // verify the required parameter 'newImage' is set
      if (newImage === undefined || newImage === null) {
        throw new Error("Missing the required parameter 'newImage' when calling renderImage");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['image/png', 'application/json'];
      let returnType = File;
      return this.apiClient.callApi(
        '/image', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
